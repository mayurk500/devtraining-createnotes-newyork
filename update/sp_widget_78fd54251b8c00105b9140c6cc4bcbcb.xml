<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope) {
  /* widget controller */
  var c = this;
	/*$rootScope.$on('selectNote',function(event, data){
		console.log('Listener caught NoteID: ' + $rootScope.noteId);
	});*/
	$rootScope.$on('selectNote',function(event, data){
		c.server.get({
			action: 'getNote',
			noteId: $rootScope.noteId
		}).then(function(r){
			c.data.title = r.data.note.title;
			c.data.note = r.data.note.note;
			c.data.noteId = r.data.note.sys_id;
		});
	});
	c.updateNote = function(str){
		console.log('on change clicked....'+str);
		//call the server to update the database get method
		$rootScope.noteId1 = c.data.noteId;
		$rootScope.$emit('updateNote',c.data.noteId);
		c.server.get({
			action: 'updateNote',
			noteTitle: c.data.title,
			noteBody: c.data.note,
			noteId: c.data.noteId
		}).then(function(r){
			
		});
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes Body</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	if(input && input.noteId){
		 var noteGr = new GlideRecord('x_snc_createnotes_note');
		 if(noteGr.get(input.noteId) && input.action == 'getNote'){
			 data.note = {};
			 $sp.getRecordValues(data.note, noteGr,'title, note, sys_id');
			 console.log('input called....'+data.note.title);
		 }else if(noteGr.get(input.noteId) && input.action == 'updateNote'){
			 console.log('check input values...'+input.action+'...'+input.noteId+'...'+input.noteTitle);
			 noteGr.title = input.noteTitle;
			 noteGr.note = input.noteBody;
			 noteGr.update();
		 }
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-09-22 05:00:11</sys_created_on>
        <sys_id>78fd54251b8c00105b9140c6cc4bcbcb</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_78fd54251b8c00105b9140c6cc4bcbcb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-30 10:25:37</sys_updated_on>
        <template><![CDATA[<div class = 'panel panel-default' ng-show='c.data.noteId'>
  <div class = 'panel-heading clearfix'>
    <div class = 'row'>
      <div class = 'col-md-12'>
        <input class = 'form-control' id='note-title' ng-model = 'c.data.title' ng-change="c.updateNote('title')" ng-model-options="{debounce: 1000}"/>
      </div>
    </div>
  </div>
  <div class = 'panel-body'>
    <textarea class = 'form-control' id = 'note-body' ng-model = 'c.data.note' ng-change="c.updateNote('body')" ng-model-options="{debounce: 1000}"></textarea>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
